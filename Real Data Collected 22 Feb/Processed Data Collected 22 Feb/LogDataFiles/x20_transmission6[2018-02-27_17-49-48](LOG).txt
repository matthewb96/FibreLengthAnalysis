Log file for ..\Real Data Collected 22 Feb\x20_transmission6.bmp

Save location: ..\Real Data Collected 22 Feb\Processed Data Collected 22 Feb\Images\x20_transmission6[2018-02-27_17-49-48]
Started at: 36.19273075690038s



***********************************************************************************
Starting image 1 out of 1
Opened image 1 out of 1
# Corners Found: 48
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(23)[0;36maverageEdges[0;34m()[0m
[0;32m     21 [0;31m    [0marg[0m[0;34m[[0m[0;36m2[0m[0;34m][0m [0mimageArray[0m [0;34m-[0m [0mnumpy[0m [0marray[0m [0mcontaining[0m [0mthe[0m [0mimage[0m [0mdata[0m[0;34m.[0m[0;34m[0m[0m
[0m[0;32m     22 [0;31m    """
[0m[1;31m1[0;32m--> 23 [0;31m    [0maverageCoords[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m[0;36m0[0m[0;34m][0m[0;34m][0m[0;34m)[0m [0;31m#Initiate array with temp values[0m[0;34m[0m[0m
[0m[0;32m     24 [0;31m    [0marrayLength[0m[0;34m,[0m [0mwidth[0m [0;34m=[0m [0mcornerPos[0m[0;34m.[0m[0mshape[0m [0;31m#Find length of axis 0[0m[0;34m[0m[0m
[0m[0;32m     25 [0;31m    [0mfoundMidpoint[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mfull[0m[0;34m([0m[0marrayLength[0m[0;34m,[0m [0;32mFalse[0m[0;34m,[0m [0mdtype[0m [0;34m=[0m [0mbool[0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(24)[0;36maverageEdges[0;34m()[0m
[0;32m     22 [0;31m    """
[0m[1;31m1[0;32m    23 [0;31m    [0maverageCoords[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m[0;36m0[0m[0;34m][0m[0;34m][0m[0;34m)[0m [0;31m#Initiate array with temp values[0m[0;34m[0m[0m
[0m[0;32m---> 24 [0;31m    [0marrayLength[0m[0;34m,[0m [0mwidth[0m [0;34m=[0m [0mcornerPos[0m[0;34m.[0m[0mshape[0m [0;31m#Find length of axis 0[0m[0;34m[0m[0m
[0m[0;32m     25 [0;31m    [0mfoundMidpoint[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mfull[0m[0;34m([0m[0marrayLength[0m[0;34m,[0m [0;32mFalse[0m[0;34m,[0m [0mdtype[0m [0;34m=[0m [0mbool[0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     26 [0;31m    [0;32mfor[0m [0mi[0m [0;32min[0m [0mrange[0m[0;34m([0m[0marrayLength[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(25)[0;36maverageEdges[0;34m()[0m
[1;31m1[0;32m    23 [0;31m    [0maverageCoords[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m[0;36m0[0m[0;34m][0m[0;34m][0m[0;34m)[0m [0;31m#Initiate array with temp values[0m[0;34m[0m[0m
[0m[0;32m     24 [0;31m    [0marrayLength[0m[0;34m,[0m [0mwidth[0m [0;34m=[0m [0mcornerPos[0m[0;34m.[0m[0mshape[0m [0;31m#Find length of axis 0[0m[0;34m[0m[0m
[0m[0;32m---> 25 [0;31m    [0mfoundMidpoint[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mfull[0m[0;34m([0m[0marrayLength[0m[0;34m,[0m [0;32mFalse[0m[0;34m,[0m [0mdtype[0m [0;34m=[0m [0mbool[0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     26 [0;31m    [0;32mfor[0m [0mi[0m [0;32min[0m [0mrange[0m[0;34m([0m[0marrayLength[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(26)[0;36maverageEdges[0;34m()[0m
[0;32m     24 [0;31m    [0marrayLength[0m[0;34m,[0m [0mwidth[0m [0;34m=[0m [0mcornerPos[0m[0;34m.[0m[0mshape[0m [0;31m#Find length of axis 0[0m[0;34m[0m[0m
[0m[0;32m     25 [0;31m    [0mfoundMidpoint[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mfull[0m[0;34m([0m[0marrayLength[0m[0;34m,[0m [0;32mFalse[0m[0;34m,[0m [0mdtype[0m [0;34m=[0m [0mbool[0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m---> 26 [0;31m    [0;32mfor[0m [0mi[0m [0;32min[0m [0mrange[0m[0;34m([0m[0marrayLength[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(27)[0;36maverageEdges[0;34m()[0m
[0;32m     25 [0;31m    [0mfoundMidpoint[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mfull[0m[0;34m([0m[0marrayLength[0m[0;34m,[0m [0;32mFalse[0m[0;34m,[0m [0mdtype[0m [0;34m=[0m [0mbool[0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     26 [0;31m    [0;32mfor[0m [0mi[0m [0;32min[0m [0mrange[0m[0;34m([0m[0marrayLength[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m---> 27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(35)[0;36maverageEdges[0;34m()[0m
[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m---> 35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     37 [0;31m                [0;32mfor[0m [0mi[0m [0;32min[0m [0;34m[[0m[0;34m([0m[0;36m0[0m[0;34m,[0m[0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m][0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(37)[0;36maverageEdges[0;34m()[0m
[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 37 [0;31m                [0;32mfor[0m [0mi[0m [0;32min[0m [0;34m[[0m[0;34m([0m[0;36m0[0m[0;34m,[0m[0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m][0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     38 [0;31m                    [0mx[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m0[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     39 [0;31m                    [0my[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(38)[0;36maverageEdges[0;34m()[0m
[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     37 [0;31m                [0;32mfor[0m [0mi[0m [0;32min[0m [0;34m[[0m[0;34m([0m[0;36m0[0m[0;34m,[0m[0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m][0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m---> 38 [0;31m                    [0mx[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m0[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     39 [0;31m                    [0my[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     40 [0;31m                    [0mpos[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0mx[0m[0;34m,[0m [0my[0m[0;34m][0m[0;34m,[0m [0mdtype[0m [0;34m=[0m [0mint[0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(39)[0;36maverageEdges[0;34m()[0m
[0;32m     37 [0;31m                [0;32mfor[0m [0mi[0m [0;32min[0m [0;34m[[0m[0;34m([0m[0;36m0[0m[0;34m,[0m[0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m][0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     38 [0;31m                    [0mx[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m0[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m---> 39 [0;31m                    [0my[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     40 [0;31m                    [0mpos[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0mx[0m[0;34m,[0m [0my[0m[0;34m][0m[0;34m,[0m [0mdtype[0m [0;34m=[0m [0mint[0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     41 [0;31m                    [0;32mif[0m [0mcheckBlack[0m[0;34m([0m[0mpos[0m[0;34m,[0m [0mimageArray[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(40)[0;36maverageEdges[0;34m()[0m
[0;32m     38 [0;31m                    [0mx[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m0[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     39 [0;31m                    [0my[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m---> 40 [0;31m                    [0mpos[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0mx[0m[0;34m,[0m [0my[0m[0;34m][0m[0;34m,[0m [0mdtype[0m [0;34m=[0m [0mint[0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     41 [0;31m                    [0;32mif[0m [0mcheckBlack[0m[0;34m([0m[0mpos[0m[0;34m,[0m [0mimageArray[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     42 [0;31m                        [0;31m#If one of the pixels next to the midpoint is black then consider it part of a fibre and save the midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(41)[0;36maverageEdges[0;34m()[0m
[0;32m     39 [0;31m                    [0my[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     40 [0;31m                    [0mpos[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0mx[0m[0;34m,[0m [0my[0m[0;34m][0m[0;34m,[0m [0mdtype[0m [0;34m=[0m [0mint[0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m---> 41 [0;31m                    [0;32mif[0m [0mcheckBlack[0m[0;34m([0m[0mpos[0m[0;34m,[0m [0mimageArray[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     42 [0;31m                        [0;31m#If one of the pixels next to the midpoint is black then consider it part of a fibre and save the midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     43 [0;31m                        [0maverageCoords[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mvstack[0m[0;34m([0m[0;34m([0m[0maverageCoords[0m[0;34m,[0m [0maverage[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(37)[0;36maverageEdges[0;34m()[0m
[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 37 [0;31m                [0;32mfor[0m [0mi[0m [0;32min[0m [0;34m[[0m[0;34m([0m[0;36m0[0m[0;34m,[0m[0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m][0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     38 [0;31m                    [0mx[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m0[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     39 [0;31m                    [0my[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(38)[0;36maverageEdges[0;34m()[0m
[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     37 [0;31m                [0;32mfor[0m [0mi[0m [0;32min[0m [0;34m[[0m[0;34m([0m[0;36m0[0m[0;34m,[0m[0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m][0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m---> 38 [0;31m                    [0mx[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m0[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     39 [0;31m                    [0my[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     40 [0;31m                    [0mpos[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0mx[0m[0;34m,[0m [0my[0m[0;34m][0m[0;34m,[0m [0mdtype[0m [0;34m=[0m [0mint[0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(39)[0;36maverageEdges[0;34m()[0m
[0;32m     37 [0;31m                [0;32mfor[0m [0mi[0m [0;32min[0m [0;34m[[0m[0;34m([0m[0;36m0[0m[0;34m,[0m[0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m][0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     38 [0;31m                    [0mx[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m0[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m---> 39 [0;31m                    [0my[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     40 [0;31m                    [0mpos[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0mx[0m[0;34m,[0m [0my[0m[0;34m][0m[0;34m,[0m [0mdtype[0m [0;34m=[0m [0mint[0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     41 [0;31m                    [0;32mif[0m [0mcheckBlack[0m[0;34m([0m[0mpos[0m[0;34m,[0m [0mimageArray[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(40)[0;36maverageEdges[0;34m()[0m
[0;32m     38 [0;31m                    [0mx[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m0[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     39 [0;31m                    [0my[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m---> 40 [0;31m                    [0mpos[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0mx[0m[0;34m,[0m [0my[0m[0;34m][0m[0;34m,[0m [0mdtype[0m [0;34m=[0m [0mint[0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     41 [0;31m                    [0;32mif[0m [0mcheckBlack[0m[0;34m([0m[0mpos[0m[0;34m,[0m [0mimageArray[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     42 [0;31m                        [0;31m#If one of the pixels next to the midpoint is black then consider it part of a fibre and save the midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(41)[0;36maverageEdges[0;34m()[0m
[0;32m     39 [0;31m                    [0my[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     40 [0;31m                    [0mpos[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0mx[0m[0;34m,[0m [0my[0m[0;34m][0m[0;34m,[0m [0mdtype[0m [0;34m=[0m [0mint[0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m---> 41 [0;31m                    [0;32mif[0m [0mcheckBlack[0m[0;34m([0m[0mpos[0m[0;34m,[0m [0mimageArray[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     42 [0;31m                        [0;31m#If one of the pixels next to the midpoint is black then consider it part of a fibre and save the midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     43 [0;31m                        [0maverageCoords[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mvstack[0m[0;34m([0m[0;34m([0m[0maverageCoords[0m[0;34m,[0m [0maverage[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(37)[0;36maverageEdges[0;34m()[0m
[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 37 [0;31m                [0;32mfor[0m [0mi[0m [0;32min[0m [0;34m[[0m[0;34m([0m[0;36m0[0m[0;34m,[0m[0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m][0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     38 [0;31m                    [0mx[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m0[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     39 [0;31m                    [0my[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(38)[0;36maverageEdges[0;34m()[0m
[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     37 [0;31m                [0;32mfor[0m [0mi[0m [0;32min[0m [0;34m[[0m[0;34m([0m[0;36m0[0m[0;34m,[0m[0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m][0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m---> 38 [0;31m                    [0mx[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m0[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     39 [0;31m                    [0my[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     40 [0;31m                    [0mpos[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0mx[0m[0;34m,[0m [0my[0m[0;34m][0m[0;34m,[0m [0mdtype[0m [0;34m=[0m [0mint[0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(39)[0;36maverageEdges[0;34m()[0m
[0;32m     37 [0;31m                [0;32mfor[0m [0mi[0m [0;32min[0m [0;34m[[0m[0;34m([0m[0;36m0[0m[0;34m,[0m[0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m][0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     38 [0;31m                    [0mx[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m0[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m---> 39 [0;31m                    [0my[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     40 [0;31m                    [0mpos[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0mx[0m[0;34m,[0m [0my[0m[0;34m][0m[0;34m,[0m [0mdtype[0m [0;34m=[0m [0mint[0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     41 [0;31m                    [0;32mif[0m [0mcheckBlack[0m[0;34m([0m[0mpos[0m[0;34m,[0m [0mimageArray[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(40)[0;36maverageEdges[0;34m()[0m
[0;32m     38 [0;31m                    [0mx[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m0[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     39 [0;31m                    [0my[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m---> 40 [0;31m                    [0mpos[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0mx[0m[0;34m,[0m [0my[0m[0;34m][0m[0;34m,[0m [0mdtype[0m [0;34m=[0m [0mint[0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     41 [0;31m                    [0;32mif[0m [0mcheckBlack[0m[0;34m([0m[0mpos[0m[0;34m,[0m [0mimageArray[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     42 [0;31m                        [0;31m#If one of the pixels next to the midpoint is black then consider it part of a fibre and save the midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(41)[0;36maverageEdges[0;34m()[0m
[0;32m     39 [0;31m                    [0my[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     40 [0;31m                    [0mpos[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0mx[0m[0;34m,[0m [0my[0m[0;34m][0m[0;34m,[0m [0mdtype[0m [0;34m=[0m [0mint[0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m---> 41 [0;31m                    [0;32mif[0m [0mcheckBlack[0m[0;34m([0m[0mpos[0m[0;34m,[0m [0mimageArray[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     42 [0;31m                        [0;31m#If one of the pixels next to the midpoint is black then consider it part of a fibre and save the midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     43 [0;31m                        [0maverageCoords[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mvstack[0m[0;34m([0m[0;34m([0m[0maverageCoords[0m[0;34m,[0m [0maverage[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(37)[0;36maverageEdges[0;34m()[0m
[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 37 [0;31m                [0;32mfor[0m [0mi[0m [0;32min[0m [0;34m[[0m[0;34m([0m[0;36m0[0m[0;34m,[0m[0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m][0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     38 [0;31m                    [0mx[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m0[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     39 [0;31m                    [0my[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(38)[0;36maverageEdges[0;34m()[0m
[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     37 [0;31m                [0;32mfor[0m [0mi[0m [0;32min[0m [0;34m[[0m[0;34m([0m[0;36m0[0m[0;34m,[0m[0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m][0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m---> 38 [0;31m                    [0mx[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m0[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     39 [0;31m                    [0my[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     40 [0;31m                    [0mpos[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0mx[0m[0;34m,[0m [0my[0m[0;34m][0m[0;34m,[0m [0mdtype[0m [0;34m=[0m [0mint[0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(39)[0;36maverageEdges[0;34m()[0m
[0;32m     37 [0;31m                [0;32mfor[0m [0mi[0m [0;32min[0m [0;34m[[0m[0;34m([0m[0;36m0[0m[0;34m,[0m[0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m][0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     38 [0;31m                    [0mx[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m0[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m---> 39 [0;31m                    [0my[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     40 [0;31m                    [0mpos[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0mx[0m[0;34m,[0m [0my[0m[0;34m][0m[0;34m,[0m [0mdtype[0m [0;34m=[0m [0mint[0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     41 [0;31m                    [0;32mif[0m [0mcheckBlack[0m[0;34m([0m[0mpos[0m[0;34m,[0m [0mimageArray[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(40)[0;36maverageEdges[0;34m()[0m
[0;32m     38 [0;31m                    [0mx[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m0[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     39 [0;31m                    [0my[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m---> 40 [0;31m                    [0mpos[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0mx[0m[0;34m,[0m [0my[0m[0;34m][0m[0;34m,[0m [0mdtype[0m [0;34m=[0m [0mint[0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     41 [0;31m                    [0;32mif[0m [0mcheckBlack[0m[0;34m([0m[0mpos[0m[0;34m,[0m [0mimageArray[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     42 [0;31m                        [0;31m#If one of the pixels next to the midpoint is black then consider it part of a fibre and save the midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(41)[0;36maverageEdges[0;34m()[0m
[0;32m     39 [0;31m                    [0my[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     40 [0;31m                    [0mpos[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0mx[0m[0;34m,[0m [0my[0m[0;34m][0m[0;34m,[0m [0mdtype[0m [0;34m=[0m [0mint[0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m---> 41 [0;31m                    [0;32mif[0m [0mcheckBlack[0m[0;34m([0m[0mpos[0m[0;34m,[0m [0mimageArray[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     42 [0;31m                        [0;31m#If one of the pixels next to the midpoint is black then consider it part of a fibre and save the midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     43 [0;31m                        [0maverageCoords[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mvstack[0m[0;34m([0m[0;34m([0m[0maverageCoords[0m[0;34m,[0m [0maverage[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(37)[0;36maverageEdges[0;34m()[0m
[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 37 [0;31m                [0;32mfor[0m [0mi[0m [0;32min[0m [0;34m[[0m[0;34m([0m[0;36m0[0m[0;34m,[0m[0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m][0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     38 [0;31m                    [0mx[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m0[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     39 [0;31m                    [0my[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(38)[0;36maverageEdges[0;34m()[0m
[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     37 [0;31m                [0;32mfor[0m [0mi[0m [0;32min[0m [0;34m[[0m[0;34m([0m[0;36m0[0m[0;34m,[0m[0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m][0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m---> 38 [0;31m                    [0mx[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m0[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     39 [0;31m                    [0my[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     40 [0;31m                    [0mpos[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0mx[0m[0;34m,[0m [0my[0m[0;34m][0m[0;34m,[0m [0mdtype[0m [0;34m=[0m [0mint[0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(39)[0;36maverageEdges[0;34m()[0m
[0;32m     37 [0;31m                [0;32mfor[0m [0mi[0m [0;32min[0m [0;34m[[0m[0;34m([0m[0;36m0[0m[0;34m,[0m[0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m][0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     38 [0;31m                    [0mx[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m0[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m---> 39 [0;31m                    [0my[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     40 [0;31m                    [0mpos[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0mx[0m[0;34m,[0m [0my[0m[0;34m][0m[0;34m,[0m [0mdtype[0m [0;34m=[0m [0mint[0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     41 [0;31m                    [0;32mif[0m [0mcheckBlack[0m[0;34m([0m[0mpos[0m[0;34m,[0m [0mimageArray[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(40)[0;36maverageEdges[0;34m()[0m
[0;32m     38 [0;31m                    [0mx[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m0[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     39 [0;31m                    [0my[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m---> 40 [0;31m                    [0mpos[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0mx[0m[0;34m,[0m [0my[0m[0;34m][0m[0;34m,[0m [0mdtype[0m [0;34m=[0m [0mint[0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     41 [0;31m                    [0;32mif[0m [0mcheckBlack[0m[0;34m([0m[0mpos[0m[0;34m,[0m [0mimageArray[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     42 [0;31m                        [0;31m#If one of the pixels next to the midpoint is black then consider it part of a fibre and save the midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(41)[0;36maverageEdges[0;34m()[0m
[0;32m     39 [0;31m                    [0my[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     40 [0;31m                    [0mpos[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0mx[0m[0;34m,[0m [0my[0m[0;34m][0m[0;34m,[0m [0mdtype[0m [0;34m=[0m [0mint[0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m---> 41 [0;31m                    [0;32mif[0m [0mcheckBlack[0m[0;34m([0m[0mpos[0m[0;34m,[0m [0mimageArray[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     42 [0;31m                        [0;31m#If one of the pixels next to the midpoint is black then consider it part of a fibre and save the midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     43 [0;31m                        [0maverageCoords[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mvstack[0m[0;34m([0m[0;34m([0m[0maverageCoords[0m[0;34m,[0m [0maverage[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(37)[0;36maverageEdges[0;34m()[0m
[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 37 [0;31m                [0;32mfor[0m [0mi[0m [0;32min[0m [0;34m[[0m[0;34m([0m[0;36m0[0m[0;34m,[0m[0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m][0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     38 [0;31m                    [0mx[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m0[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     39 [0;31m                    [0my[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(38)[0;36maverageEdges[0;34m()[0m
[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     37 [0;31m                [0;32mfor[0m [0mi[0m [0;32min[0m [0;34m[[0m[0;34m([0m[0;36m0[0m[0;34m,[0m[0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m][0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m---> 38 [0;31m                    [0mx[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m0[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     39 [0;31m                    [0my[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     40 [0;31m                    [0mpos[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0mx[0m[0;34m,[0m [0my[0m[0;34m][0m[0;34m,[0m [0mdtype[0m [0;34m=[0m [0mint[0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(39)[0;36maverageEdges[0;34m()[0m
[0;32m     37 [0;31m                [0;32mfor[0m [0mi[0m [0;32min[0m [0;34m[[0m[0;34m([0m[0;36m0[0m[0;34m,[0m[0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m][0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     38 [0;31m                    [0mx[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m0[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m---> 39 [0;31m                    [0my[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     40 [0;31m                    [0mpos[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0mx[0m[0;34m,[0m [0my[0m[0;34m][0m[0;34m,[0m [0mdtype[0m [0;34m=[0m [0mint[0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     41 [0;31m                    [0;32mif[0m [0mcheckBlack[0m[0;34m([0m[0mpos[0m[0;34m,[0m [0mimageArray[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(40)[0;36maverageEdges[0;34m()[0m
[0;32m     38 [0;31m                    [0mx[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m0[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     39 [0;31m                    [0my[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m---> 40 [0;31m                    [0mpos[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0mx[0m[0;34m,[0m [0my[0m[0;34m][0m[0;34m,[0m [0mdtype[0m [0;34m=[0m [0mint[0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     41 [0;31m                    [0;32mif[0m [0mcheckBlack[0m[0;34m([0m[0mpos[0m[0;34m,[0m [0mimageArray[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     42 [0;31m                        [0;31m#If one of the pixels next to the midpoint is black then consider it part of a fibre and save the midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(41)[0;36maverageEdges[0;34m()[0m
[0;32m     39 [0;31m                    [0my[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     40 [0;31m                    [0mpos[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0mx[0m[0;34m,[0m [0my[0m[0;34m][0m[0;34m,[0m [0mdtype[0m [0;34m=[0m [0mint[0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m---> 41 [0;31m                    [0;32mif[0m [0mcheckBlack[0m[0;34m([0m[0mpos[0m[0;34m,[0m [0mimageArray[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     42 [0;31m                        [0;31m#If one of the pixels next to the midpoint is black then consider it part of a fibre and save the midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     43 [0;31m                        [0maverageCoords[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mvstack[0m[0;34m([0m[0;34m([0m[0maverageCoords[0m[0;34m,[0m [0maverage[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(37)[0;36maverageEdges[0;34m()[0m
[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 37 [0;31m                [0;32mfor[0m [0mi[0m [0;32min[0m [0;34m[[0m[0;34m([0m[0;36m0[0m[0;34m,[0m[0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m][0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     38 [0;31m                    [0mx[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m0[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     39 [0;31m                    [0my[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(38)[0;36maverageEdges[0;34m()[0m
[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     37 [0;31m                [0;32mfor[0m [0mi[0m [0;32min[0m [0;34m[[0m[0;34m([0m[0;36m0[0m[0;34m,[0m[0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m][0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m---> 38 [0;31m                    [0mx[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m0[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     39 [0;31m                    [0my[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     40 [0;31m                    [0mpos[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0mx[0m[0;34m,[0m [0my[0m[0;34m][0m[0;34m,[0m [0mdtype[0m [0;34m=[0m [0mint[0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(39)[0;36maverageEdges[0;34m()[0m
[0;32m     37 [0;31m                [0;32mfor[0m [0mi[0m [0;32min[0m [0;34m[[0m[0;34m([0m[0;36m0[0m[0;34m,[0m[0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m][0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     38 [0;31m                    [0mx[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m0[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m---> 39 [0;31m                    [0my[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     40 [0;31m                    [0mpos[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0mx[0m[0;34m,[0m [0my[0m[0;34m][0m[0;34m,[0m [0mdtype[0m [0;34m=[0m [0mint[0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     41 [0;31m                    [0;32mif[0m [0mcheckBlack[0m[0;34m([0m[0mpos[0m[0;34m,[0m [0mimageArray[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(40)[0;36maverageEdges[0;34m()[0m
[0;32m     38 [0;31m                    [0mx[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m0[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     39 [0;31m                    [0my[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m---> 40 [0;31m                    [0mpos[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0mx[0m[0;34m,[0m [0my[0m[0;34m][0m[0;34m,[0m [0mdtype[0m [0;34m=[0m [0mint[0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     41 [0;31m                    [0;32mif[0m [0mcheckBlack[0m[0;34m([0m[0mpos[0m[0;34m,[0m [0mimageArray[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     42 [0;31m                        [0;31m#If one of the pixels next to the midpoint is black then consider it part of a fibre and save the midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(41)[0;36maverageEdges[0;34m()[0m
[0;32m     39 [0;31m                    [0my[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     40 [0;31m                    [0mpos[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0mx[0m[0;34m,[0m [0my[0m[0;34m][0m[0;34m,[0m [0mdtype[0m [0;34m=[0m [0mint[0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m---> 41 [0;31m                    [0;32mif[0m [0mcheckBlack[0m[0;34m([0m[0mpos[0m[0;34m,[0m [0mimageArray[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     42 [0;31m                        [0;31m#If one of the pixels next to the midpoint is black then consider it part of a fibre and save the midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     43 [0;31m                        [0maverageCoords[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mvstack[0m[0;34m([0m[0;34m([0m[0maverageCoords[0m[0;34m,[0m [0maverage[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(37)[0;36maverageEdges[0;34m()[0m
[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 37 [0;31m                [0;32mfor[0m [0mi[0m [0;32min[0m [0;34m[[0m[0;34m([0m[0;36m0[0m[0;34m,[0m[0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m][0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     38 [0;31m                    [0mx[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m0[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     39 [0;31m                    [0my[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(38)[0;36maverageEdges[0;34m()[0m
[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     37 [0;31m                [0;32mfor[0m [0mi[0m [0;32min[0m [0;34m[[0m[0;34m([0m[0;36m0[0m[0;34m,[0m[0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m][0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m---> 38 [0;31m                    [0mx[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m0[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     39 [0;31m                    [0my[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     40 [0;31m                    [0mpos[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0mx[0m[0;34m,[0m [0my[0m[0;34m][0m[0;34m,[0m [0mdtype[0m [0;34m=[0m [0mint[0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(39)[0;36maverageEdges[0;34m()[0m
[0;32m     37 [0;31m                [0;32mfor[0m [0mi[0m [0;32min[0m [0;34m[[0m[0;34m([0m[0;36m0[0m[0;34m,[0m[0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m][0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     38 [0;31m                    [0mx[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m0[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m---> 39 [0;31m                    [0my[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     40 [0;31m                    [0mpos[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0mx[0m[0;34m,[0m [0my[0m[0;34m][0m[0;34m,[0m [0mdtype[0m [0;34m=[0m [0mint[0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     41 [0;31m                    [0;32mif[0m [0mcheckBlack[0m[0;34m([0m[0mpos[0m[0;34m,[0m [0mimageArray[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(40)[0;36maverageEdges[0;34m()[0m
[0;32m     38 [0;31m                    [0mx[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m0[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     39 [0;31m                    [0my[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m---> 40 [0;31m                    [0mpos[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0mx[0m[0;34m,[0m [0my[0m[0;34m][0m[0;34m,[0m [0mdtype[0m [0;34m=[0m [0mint[0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     41 [0;31m                    [0;32mif[0m [0mcheckBlack[0m[0;34m([0m[0mpos[0m[0;34m,[0m [0mimageArray[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     42 [0;31m                        [0;31m#If one of the pixels next to the midpoint is black then consider it part of a fibre and save the midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(41)[0;36maverageEdges[0;34m()[0m
[0;32m     39 [0;31m                    [0my[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     40 [0;31m                    [0mpos[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0mx[0m[0;34m,[0m [0my[0m[0;34m][0m[0;34m,[0m [0mdtype[0m [0;34m=[0m [0mint[0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m---> 41 [0;31m                    [0;32mif[0m [0mcheckBlack[0m[0;34m([0m[0mpos[0m[0;34m,[0m [0mimageArray[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     42 [0;31m                        [0;31m#If one of the pixels next to the midpoint is black then consider it part of a fibre and save the midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     43 [0;31m                        [0maverageCoords[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mvstack[0m[0;34m([0m[0;34m([0m[0maverageCoords[0m[0;34m,[0m [0maverage[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(37)[0;36maverageEdges[0;34m()[0m
[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 37 [0;31m                [0;32mfor[0m [0mi[0m [0;32min[0m [0;34m[[0m[0;34m([0m[0;36m0[0m[0;34m,[0m[0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m][0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     38 [0;31m                    [0mx[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m0[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     39 [0;31m                    [0my[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(38)[0;36maverageEdges[0;34m()[0m
[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     37 [0;31m                [0;32mfor[0m [0mi[0m [0;32min[0m [0;34m[[0m[0;34m([0m[0;36m0[0m[0;34m,[0m[0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m][0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m---> 38 [0;31m                    [0mx[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m0[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     39 [0;31m                    [0my[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     40 [0;31m                    [0mpos[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0mx[0m[0;34m,[0m [0my[0m[0;34m][0m[0;34m,[0m [0mdtype[0m [0;34m=[0m [0mint[0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(39)[0;36maverageEdges[0;34m()[0m
[0;32m     37 [0;31m                [0;32mfor[0m [0mi[0m [0;32min[0m [0;34m[[0m[0;34m([0m[0;36m0[0m[0;34m,[0m[0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m][0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     38 [0;31m                    [0mx[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m0[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m---> 39 [0;31m                    [0my[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     40 [0;31m                    [0mpos[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0mx[0m[0;34m,[0m [0my[0m[0;34m][0m[0;34m,[0m [0mdtype[0m [0;34m=[0m [0mint[0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     41 [0;31m                    [0;32mif[0m [0mcheckBlack[0m[0;34m([0m[0mpos[0m[0;34m,[0m [0mimageArray[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(40)[0;36maverageEdges[0;34m()[0m
[0;32m     38 [0;31m                    [0mx[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m0[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     39 [0;31m                    [0my[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m---> 40 [0;31m                    [0mpos[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0mx[0m[0;34m,[0m [0my[0m[0;34m][0m[0;34m,[0m [0mdtype[0m [0;34m=[0m [0mint[0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     41 [0;31m                    [0;32mif[0m [0mcheckBlack[0m[0;34m([0m[0mpos[0m[0;34m,[0m [0mimageArray[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     42 [0;31m                        [0;31m#If one of the pixels next to the midpoint is black then consider it part of a fibre and save the midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(41)[0;36maverageEdges[0;34m()[0m
[0;32m     39 [0;31m                    [0my[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     40 [0;31m                    [0mpos[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0mx[0m[0;34m,[0m [0my[0m[0;34m][0m[0;34m,[0m [0mdtype[0m [0;34m=[0m [0mint[0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m---> 41 [0;31m                    [0;32mif[0m [0mcheckBlack[0m[0;34m([0m[0mpos[0m[0;34m,[0m [0mimageArray[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     42 [0;31m                        [0;31m#If one of the pixels next to the midpoint is black then consider it part of a fibre and save the midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     43 [0;31m                        [0maverageCoords[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mvstack[0m[0;34m([0m[0;34m([0m[0maverageCoords[0m[0;34m,[0m [0maverage[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(37)[0;36maverageEdges[0;34m()[0m
[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 37 [0;31m                [0;32mfor[0m [0mi[0m [0;32min[0m [0;34m[[0m[0;34m([0m[0;36m0[0m[0;34m,[0m[0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m1[0m[0;34m,[0m [0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;34m-[0m[0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m][0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     38 [0;31m                    [0mx[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m0[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     39 [0;31m                    [0my[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0maverage[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m][0m [0;34m+[0m [0mi[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(26)[0;36maverageEdges[0;34m()[0m
[0;32m     24 [0;31m    [0marrayLength[0m[0;34m,[0m [0mwidth[0m [0;34m=[0m [0mcornerPos[0m[0;34m.[0m[0mshape[0m [0;31m#Find length of axis 0[0m[0;34m[0m[0m
[0m[0;32m     25 [0;31m    [0mfoundMidpoint[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mfull[0m[0;34m([0m[0marrayLength[0m[0;34m,[0m [0;32mFalse[0m[0;34m,[0m [0mdtype[0m [0;34m=[0m [0mbool[0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m---> 26 [0;31m    [0;32mfor[0m [0mi[0m [0;32min[0m [0mrange[0m[0;34m([0m[0marrayLength[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(27)[0;36maverageEdges[0;34m()[0m
[0;32m     25 [0;31m    [0mfoundMidpoint[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mfull[0m[0;34m([0m[0marrayLength[0m[0;34m,[0m [0;32mFalse[0m[0;34m,[0m [0mdtype[0m [0;34m=[0m [0mbool[0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     26 [0;31m    [0;32mfor[0m [0mi[0m [0;32min[0m [0mrange[0m[0;34m([0m[0marrayLength[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m---> 27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(34)[0;36maverageEdges[0;34m()[0m
[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m---> 34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     35 [0;31m                [0maverage[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m+[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m/[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     36 [0;31m                [0;31m#Check the midpoint is part of a fibre, check all pixels within one pixel of midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m
[4;33mReloaded modules[24m: inputs, lengths, corners, graphing[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(5)[0;36m<module>[0;34m()[0m
[0;32m      3 [0;31m[0;34m@[0m[0mauthor[0m[0;34m:[0m [0mMatthew[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0mThis[0m [0mmodule[0m [0mcontains[0m [0mall[0m [0mthe[0m [0mfunctions[0m [0mthat[0m [0mwill[0m [0mfind[0m [0mthe[0m [0mcorners[0m [0;32mand[0m [0medges[0m [0mof[0m [0mthe[0m [0mfibres[0m[0;34m,[0m [0monce[0m [0mgiven[0m [0man[0m [0mimage[0m [0marray[0m[0;34m.[0m[0;34m[0m[0m
[0m[0;32m----> 5 [0;31m"""
[0m[0;32m      6 [0;31m[0;31m#Imports[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      7 [0;31m[0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\main.py[0m(5)[0;36m<module>[0;34m()[0m
[0;32m      3 [0;31m[0;34m@[0m[0mauthor[0m[0;34m:[0m [0mMatthew[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0mThis[0m [0mmain[0m [0mfile[0m [0mwill[0m [0mcontrol[0m [0mall[0m [0mother[0m [0mmodules[0m[0;34m.[0m[0;34m[0m[0m
[0m[0;32m----> 5 [0;31m"""
[0m[0;32m      6 [0;31m[0;31m#All the imported modules[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      7 [0;31m[0;32mimport[0m [0mos[0m[0;34m[0m[0m
[0m
Analysing ..\Real Data Collected 22 Feb\x20_transmission6.bmp
Log file for ..\Real Data Collected 22 Feb\x20_transmission6.bmp

Save location: ..\Real Data Collected 22 Feb\Processed Data Collected 22 Feb\Images\x20_transmission6[2018-02-27_17-54-19]
Started at: 306.8888180491584s



***********************************************************************************
Starting image 1 out of 1
Opened image 1 out of 1
# Corners Found: 48
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(23)[0;36maverageEdges[0;34m()[0m
[0;32m     21 [0;31m    [0marg[0m[0;34m[[0m[0;36m2[0m[0;34m][0m [0mimageArray[0m [0;34m-[0m [0mnumpy[0m [0marray[0m [0mcontaining[0m [0mthe[0m [0mimage[0m [0mdata[0m[0;34m.[0m[0;34m[0m[0m
[0m[0;32m     22 [0;31m    """
[0m[1;31m1[0;32m--> 23 [0;31m    [0maverageCoords[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m[0;36m0[0m[0;34m][0m[0;34m][0m[0;34m)[0m [0;31m#Initiate array with temp values[0m[0;34m[0m[0m
[0m[0;32m     24 [0;31m    [0marrayLength[0m[0;34m,[0m [0mwidth[0m [0;34m=[0m [0mcornerPos[0m[0;34m.[0m[0mshape[0m [0;31m#Find length of axis 0[0m[0;34m[0m[0m
[0m[0;32m     25 [0;31m    [0mfoundMidpoint[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mfull[0m[0;34m([0m[0marrayLength[0m[0;34m,[0m [0;32mFalse[0m[0;34m,[0m [0mdtype[0m [0;34m=[0m [0mbool[0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(24)[0;36maverageEdges[0;34m()[0m
[0;32m     22 [0;31m    """
[0m[1;31m1[0;32m    23 [0;31m    [0maverageCoords[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m[0;36m0[0m[0;34m][0m[0;34m][0m[0;34m)[0m [0;31m#Initiate array with temp values[0m[0;34m[0m[0m
[0m[0;32m---> 24 [0;31m    [0marrayLength[0m[0;34m,[0m [0mwidth[0m [0;34m=[0m [0mcornerPos[0m[0;34m.[0m[0mshape[0m [0;31m#Find length of axis 0[0m[0;34m[0m[0m
[0m[0;32m     25 [0;31m    [0mfoundMidpoint[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mfull[0m[0;34m([0m[0marrayLength[0m[0;34m,[0m [0;32mFalse[0m[0;34m,[0m [0mdtype[0m [0;34m=[0m [0mbool[0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     26 [0;31m    [0;32mfor[0m [0mi[0m [0;32min[0m [0mrange[0m[0;34m([0m[0marrayLength[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(25)[0;36maverageEdges[0;34m()[0m
[1;31m1[0;32m    23 [0;31m    [0maverageCoords[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m[0;36m0[0m[0;34m][0m[0;34m][0m[0;34m)[0m [0;31m#Initiate array with temp values[0m[0;34m[0m[0m
[0m[0;32m     24 [0;31m    [0marrayLength[0m[0;34m,[0m [0mwidth[0m [0;34m=[0m [0mcornerPos[0m[0;34m.[0m[0mshape[0m [0;31m#Find length of axis 0[0m[0;34m[0m[0m
[0m[0;32m---> 25 [0;31m    [0mfoundMidpoint[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mfull[0m[0;34m([0m[0marrayLength[0m[0;34m,[0m [0;32mFalse[0m[0;34m,[0m [0mdtype[0m [0;34m=[0m [0mbool[0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     26 [0;31m    [0;32mfor[0m [0mi[0m [0;32min[0m [0mrange[0m[0;34m([0m[0marrayLength[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(26)[0;36maverageEdges[0;34m()[0m
[0;32m     24 [0;31m    [0marrayLength[0m[0;34m,[0m [0mwidth[0m [0;34m=[0m [0mcornerPos[0m[0;34m.[0m[0mshape[0m [0;31m#Find length of axis 0[0m[0;34m[0m[0m
[0m[0;32m     25 [0;31m    [0mfoundMidpoint[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mfull[0m[0;34m([0m[0marrayLength[0m[0;34m,[0m [0;32mFalse[0m[0;34m,[0m [0mdtype[0m [0;34m=[0m [0mbool[0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m---> 26 [0;31m    [0;32mfor[0m [0mi[0m [0;32min[0m [0mrange[0m[0;34m([0m[0marrayLength[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(27)[0;36maverageEdges[0;34m()[0m
[0;32m     25 [0;31m    [0mfoundMidpoint[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mfull[0m[0;34m([0m[0marrayLength[0m[0;34m,[0m [0;32mFalse[0m[0;34m,[0m [0mdtype[0m [0;34m=[0m [0mbool[0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     26 [0;31m    [0;32mfor[0m [0mi[0m [0;32min[0m [0mrange[0m[0;34m([0m[0marrayLength[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m---> 27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(29)[0;36maverageEdges[0;34m()[0m
[0;32m     27 [0;31m        [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(30)[0;36maverageEdges[0;34m()[0m
[0;32m     28 [0;31m            [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     29 [0;31m        [0;32mfor[0m [0mj[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mi[0m[0;34m,[0m [0marrayLength[0m[0;34m)[0m[0;34m:[0m [0;31m#Generates list of numbers starts at i so to not repeat numbers already compared[0m[0;34m[0m[0m
[0m[0;32m---> 30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(32)[0;36maverageEdges[0;34m()[0m
[0;32m     30 [0;31m            [0;32mif[0m [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m:[0m [0;31m#If corner is already part of an edge[0m[0;34m[0m[0m
[0m[0;32m     31 [0;31m                [0;32mcontinue[0m[0;34m[0m[0m
[0m[0;32m---> 32 [0;31m            [0mdistance[0m [0;34m=[0m [0mcoordDist[0m[0;34m([0m[0mcornerPos[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mcornerPos[0m[0;34m[[0m[0mj[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m            [0;31m#Checking against a slightly larger number because if the corners are not exact due to blurring they might be slightly further apart than fibre width[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m            [0;32mif[0m  [0mdistance[0m [0;34m<=[0m [0mint[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mrint[0m[0;34m([0m[0mFIBREWIDTH[0m[0;34m*[0m[0;36m1.1[0m[0;34m)[0m[0;34m)[0m [0;32mand[0m [0mdistance[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0m
[0m
> [0;32mc:\users\matthew\masters project\program files\fibrelengthanalysis\code\corners.py[0m(43)[0;36maverageEdges[0;34m()[0m
[0;32m     41 [0;31m                    [0;32mif[0m [0mcheckBlack[0m[0;34m([0m[0mpos[0m[0;34m,[0m [0mimageArray[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0m
[0m[0;32m     42 [0;31m                        [0;31m#If one of the pixels next to the midpoint is black then consider it part of a fibre and save the midpoint[0m[0;34m[0m[0;34m[0m[0m
[0m[1;31m2[0;32m--> 43 [0;31m                        [0maverageCoords[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mvstack[0m[0;34m([0m[0;34m([0m[0maverageCoords[0m[0;34m,[0m [0maverage[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0m
[0m[0;32m     44 [0;31m                        [0mfoundMidpoint[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m=[0m [0;32mTrue[0m[0;34m[0m[0m
[0m[0;32m     45 [0;31m                        [0mfoundMidpoint[0m[0;34m[[0m[0mj[0m[0;34m][0m [0;34m=[0m [0;32mTrue[0m[0;34m[0m[0m
[0m
[4;33mReloaded modules[24m: inputs, lengths, corners, graphing[0m
Analysing ..\Real Data Collected 22 Feb\x20_transmission6.bmp
Log file for ..\Real Data Collected 22 Feb\x20_transmission6.bmp

Save location: ..\Real Data Collected 22 Feb\Processed Data Collected 22 Feb\Images\x20_transmission6[2018-02-27_17-55-21]
Started at: 368.7356077113072s



***********************************************************************************
Starting image 1 out of 1
Opened image 1 out of 1
# Corners Found: 48
# Endpoints: 42
Current clock 368.83452362193077s. 0 out of 42 coordinates found.
Current clock 368.83475455542737s. 0 out of 42 coordinates found.
Current clock 368.83540962168564s. 0 out of 42 coordinates found.
Current clock 368.83607253666406s. 0 out of 42 coordinates found.
Current clock 368.8367602052984s. 0 out of 42 coordinates found.
Current clock 368.927875393719s. 4 out of 42 coordinates found.
Current clock 368.92854736491296s. 4 out of 42 coordinates found.
Current clock 368.92912817020374s. 4 out of 42 coordinates found.
Current clock 368.9297071642514s. 4 out of 42 coordinates found.
Current clock 368.930280120822s. 4 out of 42 coordinates found.
Current clock 368.93087783104846s. 4 out of 42 coordinates found.
Current clock 368.9314516932406s. 4 out of 42 coordinates found.
Current clock 368.9320267629282s. 4 out of 42 coordinates found.
Current clock 368.93259790825573s. 4 out of 42 coordinates found.
Current clock 368.9331720723217s. 4 out of 42 coordinates found.
Current clock 368.9337423120277s. 4 out of 42 coordinates found.
Current clock 368.9352918305087s. 4 out of 42 coordinates found.
Current clock 368.93712450666266s. 4 out of 42 coordinates found.
Current clock 368.93793624545003s. 4 out of 42 coordinates found.
Current clock 368.93863598903835s. 4 out of 42 coordinates found.
Current clock 368.9393040358723s. 4 out of 42 coordinates found.
Current clock 368.9399464234288s. 4 out of 42 coordinates found.
Current clock 368.9405869997422s. 4 out of 42 coordinates found.
Current clock 368.9411801818609s. 4 out of 42 coordinates found.
Current clock 368.94180596635556s. 4 out of 42 coordinates found.
Current clock 368.9423849604032s. 4 out of 42 coordinates found.
Current clock 368.9429624450816s. 4 out of 42 coordinates found.
Current clock 368.9435344960307s. 4 out of 42 coordinates found.
Current clock 368.94410956571824s. 4 out of 42 coordinates found.
Current clock 368.9446828241627s. 4 out of 42 coordinates found.
Current clock 368.9467156426804s. 4 out of 42 coordinates found.
Current clock 368.94826848177377s. 4 out of 42 coordinates found.
Current clock 368.9488450608306s. 4 out of 42 coordinates found.
Current clock 368.94941801740123s. 4 out of 42 coordinates found.
Current clock 368.94999338896264s. 4 out of 42 coordinates found.
Current clock 369.04304630563763s. 8 out of 42 coordinates found.
Current clock 369.0437128431023s. 8 out of 42 coordinates found.
Current clock 369.0442939502669s. 8 out of 42 coordinates found.
Current clock 369.0448765668008s. 8 out of 42 coordinates found.
Current clock 369.0449472052821s. 8 out of 42 coordinates found.
Current clock 369.04548423886433s. 8 out of 42 coordinates found.
Current clock 369.046061119795s. 8 out of 42 coordinates found.
Current clock 369.0461293432855s. 8 out of 42 coordinates found.
Current clock 369.0469368558389s. 8 out of 42 coordinates found.
Current clock 369.04707903842313s. 8 out of 42 coordinates found.
Current clock 369.0476664849386s. 8 out of 42 coordinates found.
Current clock 369.0477422552754s. 8 out of 42 coordinates found.
Current clock 369.0482859300824s. 8 out of 42 coordinates found.
Current clock 369.04886613162546s. 8 out of 42 coordinates found.
Current clock 369.04943969194375s. 8 out of 42 coordinates found.
Current clock 369.0500171766222s. 8 out of 42 coordinates found.
Current clock 369.05059013319277s. 8 out of 42 coordinates found.
Current clock 369.0511652028804s. 8 out of 42 coordinates found.
Current clock 369.0517366500817s. 8 out of 42 coordinates found.
Current clock 369.05231081414775s. 8 out of 42 coordinates found.
Current clock 369.05288195947526s. 8 out of 42 coordinates found.
Current clock 369.05345491604584s. 8 out of 42 coordinates found.
Current clock 369.05402666512106s. 8 out of 42 coordinates found.
Current clock 369.054629507203s. 8 out of 42 coordinates found.
Current clock 369.0552000487828s. 8 out of 42 coordinates found.
Current clock 369.05677220780274s. 8 out of 42 coordinates found.
Current clock 369.057347881238s. 8 out of 42 coordinates found.
Current clock 369.05741640660233s. 8 out of 42 coordinates found.
Current clock 369.0579522326892s. 8 out of 42 coordinates found.
Current clock 369.0580228711705s. 8 out of 42 coordinates found.
Current clock 369.0585565841404s. 8 out of 42 coordinates found.
Current clock 369.05912531447706s. 8 out of 42 coordinates found.
Current clock 369.05969917666926s. 8 out of 42 coordinates found.
Current clock 369.0602700201229s. 8 out of 42 coordinates found.
Current clock 369.06084358044126s. 8 out of 42 coordinates found.
Current clock 369.06141291452565s. 8 out of 42 coordinates found.
Current clock 369.0630427314512s. 8 out of 42 coordinates found.
Current clock 369.06364044167765s. 8 out of 42 coordinates found.
Current clock 369.0642173226084s. 8 out of 42 coordinates found.
Current clock 369.06576955795407s. 8 out of 42 coordinates found.
Current clock 369.0663461370109s. 8 out of 42 coordinates found.
Current clock 369.0669172823384s. 8 out of 42 coordinates found.
Current clock 369.06749174827826s. 8 out of 42 coordinates found.
Current clock 369.06806168611035s. 8 out of 42 coordinates found.
Current clock 369.0686358501764s. 8 out of 42 coordinates found.
Current clock 369.0692079011254s. 8 out of 42 coordinates found.
Current clock 369.06978236706533s. 8 out of 42 coordinates found.
Current clock 369.0703526067713s. 8 out of 42 coordinates found.
Current clock 369.0709258652157s. 8 out of 42 coordinates found.
Current clock 369.0714967086694s. 8 out of 42 coordinates found.
Current clock 369.07207057086157s. 8 out of 42 coordinates found.
Current clock 369.07264050869367s. 8 out of 42 coordinates found.
Current clock 369.07323308706464s. 8 out of 42 coordinates found.
Current clock 369.07380362864444s. 8 out of 42 coordinates found.
Current clock 369.07437809458435s. 8 out of 42 coordinates found.
Current clock 369.07494803241644s. 8 out of 42 coordinates found.
Current clock 369.0755203852393s. 8 out of 42 coordinates found.
Current clock 369.07609002119756s. 8 out of 42 coordinates found.
Current clock 369.0766635815159s. 8 out of 42 coordinates found.
Current clock 369.0767330125018s. 8 out of 42 coordinates found.
Current clock 369.0772697442102s. 8 out of 42 coordinates found.
Current clock 369.07801627824557s. 8 out of 42 coordinates found.
Current clock 369.0786348177678s. 8 out of 42 coordinates found.
Current clock 369.0792177361755s. 8 out of 42 coordinates found.
Current clock 369.0797928058631s. 8 out of 42 coordinates found.
Current clock 369.0803702905415s. 8 out of 42 coordinates found.
Current clock 369.0809417377429s. 8 out of 42 coordinates found.
Current clock 369.0815162036827s. 8 out of 42 coordinates found.
Current clock 369.0820864433887s. 8 out of 42 coordinates found.
Current clock 369.082660003707s. 8 out of 42 coordinates found.
Current clock 369.0832293377914s. 8 out of 42 coordinates found.
Current clock 369.08380169061434s. 8 out of 42 coordinates found.
Current clock 369.08437343968956s. 8 out of 42 coordinates found.
Current clock 369.08494700000784s. 8 out of 42 coordinates found.
Current clock 369.08501552537217s. 8 out of 42 coordinates found.
Current clock 369.08700789279374s. 8 out of 42 coordinates found.
Current clock 369.08758326435515s. 8 out of 42 coordinates found.
Current clock 369.0881541078088s. 8 out of 42 coordinates found.
Current clock 369.08872766812715s. 8 out of 42 coordinates found.
Current clock 369.08929700221154s. 8 out of 42 coordinates found.
Current clock 369.0898901843302s. 8 out of 42 coordinates found.
Current clock 369.09046042403617s. 8 out of 42 coordinates found.
Current clock 369.09128061529134s. 8 out of 42 coordinates found.
Current clock 369.09204194114545s. 8 out of 42 coordinates found.
Current clock 369.0926550469384s. 8 out of 42 coordinates found.
Current clock 369.09333033874475s. 8 out of 42 coordinates found.
Current clock 369.0939238227373s. 8 out of 42 coordinates found.
Current clock 369.09450553364957s. 8 out of 42 coordinates found.
Current clock 369.12617028945476s. 12 out of 42 coordinates found.
Current clock 369.1267870177339s. 12 out of 42 coordinates found.
Current clock 369.1268649011876s. 12 out of 42 coordinates found.
Current clock 369.1269026354191s. 12 out of 42 coordinates found.
Current clock 369.12693372842585s. 12 out of 42 coordinates found.
Current clock 369.12844641829696s. 12 out of 42 coordinates found.
Current clock 369.12902812920925s. 12 out of 42 coordinates found.
Current clock 369.1296038026445s. 12 out of 42 coordinates found.
Current clock 369.1301818910706s. 12 out of 42 coordinates found.
Current clock 369.1308112980515s. 12 out of 42 coordinates found.
Current clock 369.1313945183331s. 12 out of 42 coordinates found.
Current clock 369.13197049364226s. 12 out of 42 coordinates found.
Current clock 369.13352484210486s. 12 out of 42 coordinates found.
Current clock 369.1341032324048s. 12 out of 42 coordinates found.
Current clock 369.134677094597s. 12 out of 42 coordinates found.
Current clock 369.13525488114925s. 12 out of 42 coordinates found.
Current clock 369.1358278377199s. 12 out of 42 coordinates found.
Current clock 369.1359014949397s. 12 out of 42 coordinates found.
Current clock 369.1359353048111s. 12 out of 42 coordinates found.
Current clock 369.1364705271502s. 12 out of 42 coordinates found.
Current clock 369.13704106873s. 12 out of 42 coordinates found.
Current clock 369.1376161384176s. 12 out of 42 coordinates found.
Current clock 369.1376843619081s. 12 out of 42 coordinates found.
Current clock 369.1382229048596s. 12 out of 42 coordinates found.
Current clock 369.1387976726734s. 12 out of 42 coordinates found.
Current clock 369.139368516127s. 12 out of 42 coordinates found.
Current clock 369.14031217378755s. 12 out of 42 coordinates found.
Current clock 369.14101040800665s. 12 out of 42 coordinates found.
Current clock 369.14168419044375s. 12 out of 42 coordinates found.
Current clock 369.1422957868674s. 12 out of 42 coordinates found.
Current clock 369.14289681770623s. 12 out of 42 coordinates found.
Current clock 369.14349664104964s. 12 out of 42 coordinates found.
Current clock 369.1435702982695s. 12 out of 42 coordinates found.
Current clock 369.14360591938396s. 12 out of 42 coordinates found.
Current clock 369.14418461155776s. 12 out of 42 coordinates found.
Current clock 369.1447678318394s. 12 out of 42 coordinates found.
Current clock 369.1448381684468s. 12 out of 42 coordinates found.
Current clock 369.1463523676872s. 12 out of 42 coordinates found.
Current clock 369.1469334748518s. 12 out of 42 coordinates found.
Current clock 369.1475058276747s. 12 out of 42 coordinates found.
Current clock 369.1480818029838s. 12 out of 42 coordinates found.
Current clock 369.1486532501852s. 12 out of 42 coordinates found.
Current clock 369.1492277161251s. 12 out of 42 coordinates found.
Current clock 369.1497991633264s. 12 out of 42 coordinates found.
Current clock 369.15037393114017s. 12 out of 42 coordinates found.
Current clock 369.15094598208924s. 12 out of 42 coordinates found.
Current clock 369.15101782806596s. 12 out of 42 coordinates found.
Current clock 369.151557276639s. 12 out of 42 coordinates found.
Current clock 369.1521296294619s. 12 out of 42 coordinates found.
Current clock 369.1522017773125s. 12 out of 42 coordinates found.
Current clock 369.15371597655286s. 12 out of 42 coordinates found.
Current clock 369.15429134811427s. 12 out of 42 coordinates found.
Current clock 369.1548624934418s. 12 out of 42 coordinates found.
Current clock 369.1554357518863s. 12 out of 42 coordinates found.
Current clock 369.15610017623396s. 12 out of 42 coordinates found.
Current clock 369.1567615818431s. 12 out of 42 coordinates found.
Current clock 369.15741453498447s. 12 out of 42 coordinates found.
Current clock 369.15800439649075s. 12 out of 42 coordinates found.
Current clock 369.1585827867907s. 12 out of 42 coordinates found.
Current clock 369.1591614789645s. 12 out of 42 coordinates found.
Current clock 369.15973503928285s. 12 out of 42 coordinates found.
Current clock 369.15980779088113s. 12 out of 42 coordinates found.
Current clock 369.16034633383265s. 12 out of 42 coordinates found.
Current clock 369.1618940410705s. 12 out of 42 coordinates found.
Current clock 369.1624709220012s. 12 out of 42 coordinates found.
Current clock 369.16401862923914s. 12 out of 42 coordinates found.
Current clock 369.1645958120437s. 12 out of 42 coordinates found.
Current clock 369.16516665549733s. 12 out of 42 coordinates found.
Current clock 369.1657429326803s. 12 out of 42 coordinates found.
Current clock 369.1663149836294s. 12 out of 42 coordinates found.
Current clock 369.1668903551908s. 12 out of 42 coordinates found.
Current clock 369.1669594843029s. 12 out of 42 coordinates found.
Current clock 369.16847096667857s. 12 out of 42 coordinates found.
Current clock 369.16854311452914s. 12 out of 42 coordinates found.
Current clock 369.16908044998524s. 12 out of 42 coordinates found.
Current clock 369.16965099156505s. 12 out of 42 coordinates found.
Current clock 369.1702242500095s. 12 out of 42 coordinates found.
Current clock 369.17079418784164s. 12 out of 42 coordinates found.
Current clock 369.1714622346755s. 12 out of 42 coordinates found.
Current clock 369.17216711011935s. 12 out of 42 coordinates found.
Current clock 369.1727874608847s. 12 out of 42 coordinates found.
Current clock 369.1734280371981s. 12 out of 42 coordinates found.
Current clock 369.1740224268122s. 12 out of 42 coordinates found.
Current clock 369.1741039327522s. 12 out of 42 coordinates found.
Current clock 369.17465394691004s. 12 out of 42 coordinates found.
Current clock 369.1752317334623s. 12 out of 42 coordinates found.
Current clock 369.1758034825375s. 12 out of 42 coordinates found.
Current clock 369.17637915597277s. 12 out of 42 coordinates found.
Current clock 369.17695241441726s. 12 out of 42 coordinates found.
Current clock 369.1775268803571s. 12 out of 42 coordinates found.
Current clock 369.1780968181892s. 12 out of 42 coordinates found.
Current clock 369.17867218975067s. 12 out of 42 coordinates found.
Current clock 369.1792439388259s. 12 out of 42 coordinates found.
Current clock 369.17981961226116s. 12 out of 42 coordinates found.
Current clock 369.1813676213729s. 12 out of 42 coordinates found.
Current clock 369.182921064214s. 12 out of 42 coordinates found.
Current clock 369.1834976432708s. 12 out of 42 coordinates found.
Current clock 369.1840687885983s. 12 out of 42 coordinates found.
Current clock 369.1846426507905s. 12 out of 42 coordinates found.
Current clock 369.1852113811272s. 12 out of 42 coordinates found.
Current clock 369.18578614894096s. 12 out of 42 coordinates found.
Current clock 369.1863575961423s. 12 out of 42 coordinates found.
Current clock 369.18703409544406s. 12 out of 42 coordinates found.
Current clock 369.1879155670912s. 12 out of 42 coordinates found.
Current clock 369.18850361735434s. 12 out of 42 coordinates found.
Current clock 369.18912094938116s. 12 out of 42 coordinates found.
Current clock 369.1897204708508s. 12 out of 42 coordinates found.
Current clock 369.19127149870104s. 12 out of 42 coordinates found.
Current clock 369.1918523039918s. 12 out of 42 coordinates found.
Current clock 369.19242495868855s. 12 out of 42 coordinates found.
Current clock 369.1930015377454s. 12 out of 42 coordinates found.
Current clock 369.19307428934366s. 12 out of 42 coordinates found.
Current clock 369.1950917122949s. 12 out of 42 coordinates found.
Current clock 369.1956685932256s. 12 out of 42 coordinates found.
Current clock 369.1962409460485s. 12 out of 42 coordinates found.
Current clock 369.1968184307269s. 12 out of 42 coordinates found.
Current clock 369.19710460713833s. 12 out of 42 coordinates found.
Current clock 369.19723894100235s. 12 out of 42 coordinates found.
Current clock 369.19778774766485s. 12 out of 42 coordinates found.
Current clock 369.1983685529556s. 12 out of 42 coordinates found.
Current clock 369.19894935824635s. 12 out of 42 coordinates found.
Current clock 369.1995247298078s. 12 out of 42 coordinates found.
Current clock 369.19959868890146s. 12 out of 42 coordinates found.
Current clock 369.20013511873606s. 12 out of 42 coordinates found.
Current clock 369.2007077734328s. 12 out of 42 coordinates found.
Current clock 369.2012822393727s. 12 out of 42 coordinates found.
Current clock 369.2018551959433s. 12 out of 42 coordinates found.
Current clock 369.2024287562616s. 12 out of 42 coordinates found.
Current clock 369.2035067477862s. 12 out of 42 coordinates found.
Current clock 369.20446881975175s. 12 out of 42 coordinates found.
Current clock 369.2051709783309s. 12 out of 42 coordinates found.
Current clock 369.2058843062426s. 12 out of 42 coordinates found.
Current clock 369.20600143329705s. 12 out of 42 coordinates found.
Current clock 369.20663385901645s. 12 out of 42 coordinates found.
Current clock 369.20731579204755s. 12 out of 42 coordinates found.
Current clock 369.20893504338835s. 12 out of 42 coordinates found.
Final: 12 out of 42 coordinates found.
Lengths checked: 568
Lengths Found: 6

Drawing found fibres.
Drawing 1 out of 6
Line coords: (249, 412, 378, 445)
Drawing 2 out of 6
Line coords: (353, 265, 555, 258)
Drawing 3 out of 6
Line coords: (542, 238, 359, 243)
Drawing 4 out of 6
Line coords: (97, 493, 211, 601)
Drawing 5 out of 6
Line coords: (122, 721, 342, 550)
Drawing 6 out of 6
Line coords: (159, 340, 286, 144)
Drawn found fibres on the image: ..\Real Data Collected 22 Feb\Processed Data Collected 22 Feb\Images\x20_transmission6[2018-02-27_17-55-21]Drawn Lines.jpg

C:\Users\Matthew\Anaconda3\lib\site-packages\matplotlib\figure.py:403: UserWarning: matplotlib is currently using a non-GUI backend, so cannot show the figure
  "matplotlib is currently using a non-GUI backend, "
Analysed image 1 out of 1
***********************************************************************************

Time taken: 0.674669946224185
[4;33mReloaded modules[24m: inputs, lengths, corners, graphing[0m
Analysing ..\Real Data Collected 22 Feb\x20_transmission6.bmp
Log file for ..\Real Data Collected 22 Feb\x20_transmission6.bmp

Save location: ..\Real Data Collected 22 Feb\Processed Data Collected 22 Feb\Images\x20_transmission6[2018-02-27_18-18-20]
Started at: 1747.9733717075374s



***********************************************************************************
Starting image 1 out of 1
Opened image 1 out of 1
# Corners Found: 48
# Endpoints: 42
Current clock 1748.072580737671s. 0 out of 42 coordinates found.
Current clock 1748.0727455607941s. 0 out of 42 coordinates found.
Current clock 1748.0776606708482s. 0 out of 42 coordinates found.
Current clock 1748.082330357461s. 0 out of 42 coordinates found.
Current clock 1748.086850616517s. 0 out of 42 coordinates found.
Current clock 1748.116664885611s. 4 out of 42 coordinates found.
Current clock 1748.1168263881216s. 4 out of 42 coordinates found.
Current clock 1748.1212446138159s. 4 out of 42 coordinates found.
Current clock 1748.1257986827432s. 4 out of 42 coordinates found.
Current clock 1748.141143836249s. 8 out of 42 coordinates found.
Current clock 1748.2692874750728s. 12 out of 42 coordinates found.
Current clock 1748.2738424496217s. 12 out of 42 coordinates found.
Current clock 1748.2783618030562s. 12 out of 42 coordinates found.
Current clock 1748.278441799627s. 12 out of 42 coordinates found.
Current clock 1748.2829523987198s. 12 out of 42 coordinates found.
Current clock 1748.2874285841935s. 12 out of 42 coordinates found.
Current clock 1748.291907486532s. 12 out of 42 coordinates found.
Current clock 1748.291988992472s. 12 out of 42 coordinates found.
Current clock 1748.2966200392316s. 12 out of 42 coordinates found.
Current clock 1748.3013217244725s. 12 out of 42 coordinates found.
Current clock 1748.305786136866s. 12 out of 42 coordinates found.
Current clock 1748.3102611148443s. 12 out of 42 coordinates found.
Current clock 1748.3148912559823s. 12 out of 42 coordinates found.
Current clock 1748.3193629133484s. 12 out of 42 coordinates found.
Current clock 1748.3750118485486s. 16 out of 42 coordinates found.
Current clock 1748.379553842522s. 16 out of 42 coordinates found.
Current clock 1748.3840122174386s. 16 out of 42 coordinates found.
Current clock 1748.388505307848s. 16 out of 42 coordinates found.
Current clock 1748.3885819838063s. 16 out of 42 coordinates found.
Current clock 1748.3931535614172s. 16 out of 42 coordinates found.
Current clock 1748.3976871029226s. 16 out of 42 coordinates found.
Current clock 1748.397767703241s. 16 out of 42 coordinates found.
Current clock 1748.4021786839628s. 16 out of 42 coordinates found.
Current clock 1748.402255963669s. 16 out of 42 coordinates found.
Current clock 1748.406780147085s. 16 out of 42 coordinates found.
Current clock 1748.4068661811327s. 16 out of 42 coordinates found.
Current clock 1748.41127836935s. 16 out of 42 coordinates found.
Current clock 1748.4157304049154s. 16 out of 42 coordinates found.
Current clock 1748.4201821386073s. 16 out of 42 coordinates found.
Current clock 1748.4248708432726s. 16 out of 42 coordinates found.
Current clock 1748.429445439622s. 16 out of 42 coordinates found.
Current clock 1748.4340215453406s. 16 out of 42 coordinates found.
Current clock 1748.438734399914s. 16 out of 42 coordinates found.
Current clock 1748.4433738991415s. 16 out of 42 coordinates found.
Current clock 1748.447895365693s. 16 out of 42 coordinates found.
Current clock 1748.4531694037569s. 16 out of 42 coordinates found.
Current clock 1748.4578022617598s. 16 out of 42 coordinates found.
Current clock 1748.462327652671s. 16 out of 42 coordinates found.
Current clock 1748.4668461004842s. 16 out of 42 coordinates found.
Current clock 1748.4718605270355s. 16 out of 42 coordinates found.
Current clock 1748.4766775280877s. 16 out of 42 coordinates found.
Current clock 1748.4767919382778s. 16 out of 42 coordinates found.
Current clock 1748.4812617844004s. 16 out of 42 coordinates found.
Current clock 1748.4813698552393s. 16 out of 42 coordinates found.
Current clock 1748.486115312189s. 16 out of 42 coordinates found.
Current clock 1748.4910950232472s. 16 out of 42 coordinates found.
Current clock 1748.4958045572084s. 16 out of 42 coordinates found.
Current clock 1748.5004389245805s. 16 out of 42 coordinates found.
Current clock 1748.5049163175495s. 16 out of 42 coordinates found.
Current clock 1748.5093931067709s. 16 out of 42 coordinates found.
Current clock 1748.5138493685704s. 16 out of 42 coordinates found.
Current clock 1748.51847256661s. 16 out of 42 coordinates found.
Current clock 1748.622907938739s. 20 out of 42 coordinates found.
Current clock 1748.6275860778194s. 20 out of 42 coordinates found.
Current clock 1748.6320930544262s. 20 out of 42 coordinates found.
Current clock 1748.6321760697354s. 20 out of 42 coordinates found.
Current clock 1748.6322150114622s. 20 out of 42 coordinates found.
Current clock 1748.632247915712s. 20 out of 42 coordinates found.
Current clock 1748.6366616132984s. 20 out of 42 coordinates found.
Current clock 1748.6413240549387s. 20 out of 42 coordinates found.
Current clock 1748.6414161264634s. 20 out of 42 coordinates found.
Current clock 1748.6458319371668s. 20 out of 42 coordinates found.
Current clock 1748.650284878354s. 20 out of 42 coordinates found.
Current clock 1748.6547354045501s. 20 out of 42 coordinates found.
Current clock 1748.6594754277703s. 20 out of 42 coordinates found.
Current clock 1748.6639380289207s. 20 out of 42 coordinates found.
Current clock 1748.6683915738556s. 20 out of 42 coordinates found.
Current clock 1748.6735735403947s. 20 out of 42 coordinates found.
Current clock 1748.6783005830391s. 20 out of 42 coordinates found.
Current clock 1748.7348092549694s. 24 out of 42 coordinates found.
Current clock 1748.7393657388875s. 24 out of 42 coordinates found.
Current clock 1748.7394493579445s. 24 out of 42 coordinates found.
Current clock 1748.7394873940498s. 24 out of 42 coordinates found.
Current clock 1748.7395190908042s. 24 out of 42 coordinates found.
Current clock 1748.7439487877048s. 24 out of 42 coordinates found.
Current clock 1748.7484020307659s. 24 out of 42 coordinates found.
Current clock 1748.7530143613467s. 24 out of 42 coordinates found.
Current clock 1748.7576354462692s. 24 out of 42 coordinates found.
Current clock 1748.7621756289996s. 24 out of 42 coordinates found.
Current clock 1748.7668380706398s. 24 out of 42 coordinates found.
Current clock 1748.7721504466826s. 24 out of 42 coordinates found.
Current clock 1748.777095744122s. 24 out of 42 coordinates found.
Current clock 1748.7821406599326s. 24 out of 42 coordinates found.
Current clock 1748.7870699580576s. 24 out of 42 coordinates found.
Current clock 1748.7921568343334s. 24 out of 42 coordinates found.
Current clock 1748.792299922539s. 24 out of 42 coordinates found.
Current clock 1748.7923569766972s. 24 out of 42 coordinates found.
Current clock 1748.7970453794887s. 24 out of 42 coordinates found.
Current clock 1748.8019239628068s. 24 out of 42 coordinates found.
Current clock 1748.8020447123474s. 24 out of 42 coordinates found.
Current clock 1748.8073471265534s. 24 out of 42 coordinates found.
Current clock 1748.8125269799755s. 24 out of 42 coordinates found.
Current clock 1748.817412808266s. 24 out of 42 coordinates found.
Current clock 1748.8224655727965s. 24 out of 42 coordinates found.
Current clock 1748.827312761234s. 24 out of 42 coordinates found.
Current clock 1748.8321901370568s. 24 out of 42 coordinates found.
Current clock 1748.8374095359534s. 24 out of 42 coordinates found.
Current clock 1748.8423140804227s. 24 out of 42 coordinates found.
Current clock 1748.847451369632s. 24 out of 42 coordinates found.
Current clock 1748.847575439785s. 24 out of 42 coordinates found.
Current clock 1748.8476216264842s. 24 out of 42 coordinates found.
Current clock 1748.8522330514436s. 24 out of 42 coordinates found.
Current clock 1748.8523248210945s. 24 out of 42 coordinates found.
Current clock 1748.856952245368s. 24 out of 42 coordinates found.
Current clock 1748.8620330841666s. 24 out of 42 coordinates found.
Current clock 1748.8671909007976s. 24 out of 42 coordinates found.
Current clock 1748.8718723604904s. 24 out of 42 coordinates found.
Current clock 1748.876725586405s. 24 out of 42 coordinates found.
Current clock 1748.9235368627217s. 28 out of 42 coordinates found.
Current clock 1748.9283484300447s. 28 out of 42 coordinates found.
Current clock 1748.9320080467494s. 32 out of 42 coordinates found.
Final: 34 out of 42 coordinates found.
Lengths checked: 202
Lengths Found: 17

Drawing found fibres.
Drawing 1 out of 17
Line coords: (249, 412, 378, 445)
Drawing 2 out of 17
Line coords: (307, 348, 58, 217)
Drawing 3 out of 17
Line coords: (342, 480, 21, 128)
Drawing 4 out of 17
Line coords: (347, 475, 28, 115)
Drawing 5 out of 17
Line coords: (353, 265, 542, 238)
Drawing 6 out of 17
Line coords: (15, 682, 571, 184)
Drawing 7 out of 17
Line coords: (54, 603, 199, 424)
Drawing 8 out of 17
Line coords: (97, 493, 211, 601)
Drawing 9 out of 17
Line coords: (112, 664, 233, 437)
Drawing 10 out of 17
Line coords: (122, 721, 159, 340)
Drawing 11 out of 17
Line coords: (133, 65, 382, 358)
Drawing 12 out of 17
Line coords: (140, 639, 348, 196)
Drawing 13 out of 17
Line coords: (163, 114, 359, 243)
Drawing 14 out of 17
Line coords: (198, 158, 295, 260)
Drawing 15 out of 17
Line coords: (199, 521, 286, 144)
Drawing 16 out of 17
Line coords: (227, 73, 329, 127)
Drawing 17 out of 17
Line coords: (342, 550, 352, 153)
Drawn found fibres on the image: ..\Real Data Collected 22 Feb\Processed Data Collected 22 Feb\Images\x20_transmission6[2018-02-27_18-18-20]Drawn Lines.jpg

C:\Users\Matthew\Anaconda3\lib\site-packages\matplotlib\figure.py:403: UserWarning: matplotlib is currently using a non-GUI backend, so cannot show the figure
  "matplotlib is currently using a non-GUI backend, "
Analysed image 1 out of 1
***********************************************************************************

Time taken: 1.057538363638514
[4;33mReloaded modules[24m: inputs, lengths, corners, graphing[0m
Could not find "exit" in ..\Real Data Collected 22 Feb\
Please try again.
